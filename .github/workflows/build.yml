name: PmemCI
on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: cppcheck
        uses: deep5050/cppcheck-action@main
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          exclude_check: ./vcpkg/
          std: c++17
          output_file: ./CppCheckReport.txt
          other_options: -v --suppress=missingIncludeSystem --suppress=preprocessorErrorDirective:src/engine/storage/utils/IntegralTypes.h:70 --suppress=preprocessorErrorDirective:src/engine/storage/utils/IntegralTypes.h:65 --suppress=noValidConfiguration:src/engine/storage/utils/IntegralTypes.h:65 --suppress=noValidConfiguration:src/engine/storage/utils/IntegralTypes.h:70

      - name: publish report
        uses: mikeal/publish-to-github-action@master
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}
          BRANCH_NAME: 'main'

  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: lukka/get-cmake@latest

      - name: Restore artifacts, or setup vcpkg for building artifacts
        uses: lukka/run-vcpkg@main
        id: runvcpkg
        with:
          vcpkgJsonGlob: '**/windows/vcpkg.json'

      - name: Run CMake+vcpkg+Ninja+CTest to generate/build/test
        uses: lukka/run-cmake@v10
        id: runcmake
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: 'ninja-multi-vcpkg'
          buildPreset: 'ninja-multi-vcpkg-release'
          testPreset: 'ninja-multi-vcpkg-release'